// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.  

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif


    float rad = 30.0 * 0.01745329252;
    float sinAngle = sin(rad);
    float cosAngle = cos(rad);
    mat2 rot = mat2(cosAngle, -sinAngle, sinAngle, cosAngle);//构造2维旋转矩阵

    vec2 pivot = vec2(0.5, 0.5);
    vec2 uv = vec2(a_uv0.x, a_uv0.y);
    //uv = uv - pivot;//先移到中心旋转
    //uv = uv * rot;
    //uv = uv + pivot;

    #if USE_TEXTURE
      v_uv0 = uv;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;
  
  #include <alpha-test>
  #include <texture>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  void main () 
  {
    vec4 o = vec4(1, 1, 1, 1);
    
    #if USE_TEXTURE
      CCTexture(texture, v_uv0, o);
    #endif

    o *= v_color;

    ALPHA_TEST(o);

    gl_FragColor = o;
  }
}%
